jenkins:
  systemMessage: 'Jenkins configured automatically by Configuration as Code plugin'
  numExecutors: 2
  slaveAgentPort: 50000
  agentProtocols:
    - JNLP4-connect
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: '${JENKINS_ADMIN_USERNAME}'
          password: '${JENKINS_ADMIN_PASSWORD}'

credentials:
  system:
    domainCredentials:
      - domain:
          name: 'global'
          description: 'Global domain for credentials'
        credentials:
          - string:
              scope: GLOBAL
              id: 'sonarqube-token'
              description: 'SonarQube token for authentication'
              secret: '${SONAR_TOKEN}'
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: 'web-server-ssh-key'
              username: 'ec2-user' # default user for amazon linux
              description: 'SSH private key for Production Web Server'
              privateKeySource:
                directEntry:
                  privateKey: '${WEB_SERVER_PRIVATE_KEY}'

jobs:
  - script: |
      pipelineJob('Build-Deploy-Petclinic') {
          definition {
              cps {
                  script("""
                      pipeline {
                          agent any
                          stages {
                              stage('Checkout') {
                                  steps {
                                      git url: 'https://github.com/spring-projects/spring-petclinic.git', branch: 'main'
                                  }
                              }
                              stage('Build') {
                                  steps {
                                      sh '''
                                      ./mvnw package
                                      echo "Copying JAR to shared location..."
                                      cp target/*.jar /usr/share/ansible/petclinic.jar
                                      '''
                                  }
                              }
                              stage('Deploy') {
                                  environment {
                                      WEB_SERVER_IP = '${WEB_SERVER_IP}'
                                      SSH_KEY_FILE = credentials('web-server-ssh-key')
                                  }
                                  steps {
                                      sh '''
                                      echo "$WEB_SERVER_PRIVATE_KEY" > /tmp/web_server_key.pem
                                      chmod 400 /tmp/web_server_key.pem
                                      echo "Starting deployment..."
                                      ansible-playbook -i "$WEB_SERVER_IP," /usr/share/ansible/deploy-petclinic.yml \
                                        --private-key /tmp/web_server_key.pem -u ec2-user
                                      echo "Deployment complete."
                                      '''
                                  }
                              }
                          }
                      }
                  """)
                  sandbox()
              }
          }
      }
